%!PS-Adobe-2.0
%%Title: euler.eps
%%Creator: gnuplot 5.0 patchlevel 6
%%CreationDate: Fri Oct 12 15:27:37 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (euler.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 6)
  /Author (jonasmaziero)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct 12 15:27:37 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
1.000 UL
LTb
LCb setrgbcolor
936 480 M
63 0 V
5768 0 R
-63 0 V
stroke
792 480 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 907 M
63 0 V
5768 0 R
-63 0 V
stroke
792 907 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 1334 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1334 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 1761 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1761 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.3)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 2188 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2188 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 2616 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2616 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 3043 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3043 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 3470 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3470 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.7)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 3897 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3897 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 4324 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4324 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.9)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 4751 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 480 M
0 63 V
0 4208 R
0 -63 V
stroke
936 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1908 480 M
0 63 V
0 4208 R
0 -63 V
stroke
1908 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2880 480 M
0 63 V
0 4208 R
0 -63 V
stroke
2880 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3852 480 M
0 63 V
0 4208 R
0 -63 V
stroke
3852 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.5)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4823 480 M
0 63 V
0 4208 R
0 -63 V
stroke
4823 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5795 480 M
0 63 V
0 4208 R
0 -63 V
stroke
5795 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2.5)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6767 480 M
0 63 V
0 4208 R
0 -63 V
stroke
6767 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C /Helvetica findfont 240 scalefont setfont
LCb setrgbcolor
5696 4568 M
('euler.dat' u 1:2) Rshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5840 4568 M
639 0 V
936 480 M
19 0 V
20 0 V
19 0 V
20 0 V
19 0 V
20 0 V
19 0 V
19 0 V
20 0 V
19 0 V
20 0 V
19 0 V
20 0 V
19 0 V
20 1 V
19 0 V
19 0 V
20 0 V
19 0 V
20 0 V
19 0 V
20 1 V
19 0 V
19 0 V
20 0 V
19 1 V
20 0 V
19 0 V
20 1 V
19 0 V
20 0 V
19 1 V
19 0 V
20 1 V
19 0 V
20 1 V
19 1 V
20 0 V
19 1 V
19 0 V
20 1 V
19 1 V
20 1 V
19 1 V
20 0 V
19 1 V
20 1 V
19 1 V
19 1 V
20 1 V
19 1 V
20 2 V
19 1 V
20 1 V
19 1 V
19 2 V
20 1 V
19 1 V
20 2 V
19 2 V
20 1 V
19 2 V
20 1 V
19 2 V
19 2 V
20 2 V
19 2 V
20 2 V
19 2 V
20 2 V
19 2 V
19 2 V
20 3 V
19 2 V
20 2 V
19 3 V
20 2 V
19 3 V
19 3 V
20 2 V
19 3 V
20 3 V
19 3 V
20 3 V
19 3 V
20 3 V
19 3 V
19 4 V
20 3 V
19 4 V
20 3 V
19 4 V
20 3 V
19 4 V
19 4 V
20 4 V
19 4 V
20 4 V
19 4 V
20 5 V
19 4 V
20 4 V
stroke 2919 633 M
19 5 V
19 4 V
20 5 V
19 5 V
20 5 V
19 5 V
20 5 V
19 5 V
19 5 V
20 6 V
19 5 V
20 6 V
19 5 V
20 6 V
19 6 V
20 6 V
19 6 V
19 6 V
20 6 V
19 7 V
20 6 V
19 7 V
20 6 V
19 7 V
19 7 V
20 7 V
19 7 V
20 7 V
19 8 V
20 7 V
19 8 V
20 7 V
19 8 V
19 8 V
20 8 V
19 8 V
20 8 V
19 9 V
20 8 V
19 9 V
19 9 V
20 9 V
19 9 V
20 9 V
19 9 V
20 9 V
19 10 V
20 9 V
19 10 V
19 10 V
20 10 V
19 10 V
20 10 V
19 11 V
20 10 V
19 11 V
19 11 V
20 11 V
19 11 V
20 11 V
19 11 V
20 12 V
19 11 V
19 12 V
20 12 V
19 12 V
20 12 V
19 13 V
20 12 V
19 13 V
20 13 V
19 12 V
19 14 V
20 13 V
19 13 V
20 14 V
19 13 V
20 14 V
19 14 V
19 14 V
20 15 V
19 14 V
20 15 V
19 15 V
20 14 V
19 16 V
20 15 V
19 15 V
19 16 V
20 16 V
19 15 V
20 17 V
19 16 V
20 16 V
19 17 V
19 16 V
20 17 V
19 17 V
20 18 V
19 17 V
20 18 V
19 18 V
20 17 V
19 19 V
stroke 4940 1734 M
19 18 V
20 18 V
19 19 V
20 19 V
19 19 V
20 19 V
19 19 V
19 20 V
20 20 V
19 20 V
20 20 V
19 20 V
20 21 V
19 20 V
20 21 V
19 21 V
19 21 V
20 22 V
19 21 V
20 22 V
19 22 V
20 22 V
19 23 V
19 22 V
20 23 V
19 23 V
20 23 V
19 24 V
20 23 V
19 24 V
19 24 V
20 24 V
19 25 V
20 24 V
19 25 V
20 25 V
19 25 V
20 26 V
19 25 V
19 26 V
20 26 V
19 27 V
20 26 V
19 27 V
20 27 V
19 27 V
19 27 V
20 28 V
19 28 V
20 28 V
19 28 V
20 28 V
19 29 V
20 29 V
19 29 V
19 29 V
20 30 V
19 29 V
20 30 V
19 31 V
20 30 V
19 31 V
19 31 V
20 31 V
19 31 V
20 32 V
19 32 V
20 32 V
19 32 V
20 32 V
19 33 V
19 33 V
20 34 V
19 33 V
20 34 V
19 34 V
20 34 V
19 34 V
19 35 V
20 35 V
19 35 V
20 36 V
19 35 V
20 36 V
19 36 V
20 37 V
19 36 V
19 37 V
20 37 V
19 38 V
20 38 V
19 38 V
20 38 V
19 38 V
936 480 Pls
955 480 Pls
975 480 Pls
994 480 Pls
1014 480 Pls
1033 480 Pls
1053 480 Pls
1072 480 Pls
1091 480 Pls
1111 480 Pls
1130 480 Pls
1150 480 Pls
1169 480 Pls
1189 480 Pls
1208 480 Pls
1228 481 Pls
1247 481 Pls
1266 481 Pls
1286 481 Pls
1305 481 Pls
1325 481 Pls
1344 481 Pls
1364 482 Pls
1383 482 Pls
1402 482 Pls
1422 482 Pls
1441 483 Pls
1461 483 Pls
1480 483 Pls
1500 484 Pls
1519 484 Pls
1539 484 Pls
1558 485 Pls
1577 485 Pls
1597 486 Pls
1616 486 Pls
1636 487 Pls
1655 488 Pls
1675 488 Pls
1694 489 Pls
1713 489 Pls
1733 490 Pls
1752 491 Pls
1772 492 Pls
1791 493 Pls
1811 493 Pls
1830 494 Pls
1850 495 Pls
1869 496 Pls
1888 497 Pls
1908 498 Pls
1927 499 Pls
1947 501 Pls
1966 502 Pls
1986 503 Pls
2005 504 Pls
2024 506 Pls
2044 507 Pls
2063 508 Pls
2083 510 Pls
2102 512 Pls
2122 513 Pls
2141 515 Pls
2161 516 Pls
2180 518 Pls
2199 520 Pls
2219 522 Pls
2238 524 Pls
2258 526 Pls
2277 528 Pls
2297 530 Pls
2316 532 Pls
2335 534 Pls
2355 537 Pls
2374 539 Pls
2394 541 Pls
2413 544 Pls
2433 546 Pls
2452 549 Pls
2471 552 Pls
2491 554 Pls
2510 557 Pls
2530 560 Pls
2549 563 Pls
2569 566 Pls
2588 569 Pls
2608 572 Pls
2627 575 Pls
2646 579 Pls
2666 582 Pls
2685 586 Pls
2705 589 Pls
2724 593 Pls
2744 596 Pls
2763 600 Pls
2782 604 Pls
2802 608 Pls
2821 612 Pls
2841 616 Pls
2860 620 Pls
2880 625 Pls
2899 629 Pls
2919 633 Pls
2938 638 Pls
2957 642 Pls
2977 647 Pls
2996 652 Pls
3016 657 Pls
3035 662 Pls
3055 667 Pls
3074 672 Pls
3093 677 Pls
3113 683 Pls
3132 688 Pls
3152 694 Pls
3171 699 Pls
3191 705 Pls
3210 711 Pls
3230 717 Pls
3249 723 Pls
3268 729 Pls
3288 735 Pls
3307 742 Pls
3327 748 Pls
3346 755 Pls
3366 761 Pls
3385 768 Pls
3404 775 Pls
3424 782 Pls
3443 789 Pls
3463 796 Pls
3482 804 Pls
3502 811 Pls
3521 819 Pls
3541 826 Pls
3560 834 Pls
3579 842 Pls
3599 850 Pls
3618 858 Pls
3638 866 Pls
3657 875 Pls
3677 883 Pls
3696 892 Pls
3715 901 Pls
3735 910 Pls
3754 919 Pls
3774 928 Pls
3793 937 Pls
3813 946 Pls
3832 956 Pls
3852 965 Pls
3871 975 Pls
3890 985 Pls
3910 995 Pls
3929 1005 Pls
3949 1015 Pls
3968 1026 Pls
3988 1036 Pls
4007 1047 Pls
4026 1058 Pls
4046 1069 Pls
4065 1080 Pls
4085 1091 Pls
4104 1102 Pls
4124 1114 Pls
4143 1125 Pls
4162 1137 Pls
4182 1149 Pls
4201 1161 Pls
4221 1173 Pls
4240 1186 Pls
4260 1198 Pls
4279 1211 Pls
4299 1224 Pls
4318 1236 Pls
4337 1250 Pls
4357 1263 Pls
4376 1276 Pls
4396 1290 Pls
4415 1303 Pls
4435 1317 Pls
4454 1331 Pls
4473 1345 Pls
4493 1360 Pls
4512 1374 Pls
4532 1389 Pls
4551 1404 Pls
4571 1418 Pls
4590 1434 Pls
4610 1449 Pls
4629 1464 Pls
4648 1480 Pls
4668 1496 Pls
4687 1511 Pls
4707 1528 Pls
4726 1544 Pls
4746 1560 Pls
4765 1577 Pls
4784 1593 Pls
4804 1610 Pls
4823 1627 Pls
4843 1645 Pls
4862 1662 Pls
4882 1680 Pls
4901 1698 Pls
4921 1715 Pls
4940 1734 Pls
4959 1752 Pls
4979 1770 Pls
4998 1789 Pls
5018 1808 Pls
5037 1827 Pls
5057 1846 Pls
5076 1865 Pls
5095 1885 Pls
5115 1905 Pls
5134 1925 Pls
5154 1945 Pls
5173 1965 Pls
5193 1986 Pls
5212 2006 Pls
5232 2027 Pls
5251 2048 Pls
5270 2069 Pls
5290 2091 Pls
5309 2112 Pls
5329 2134 Pls
5348 2156 Pls
5368 2178 Pls
5387 2201 Pls
5406 2223 Pls
5426 2246 Pls
5445 2269 Pls
5465 2292 Pls
5484 2316 Pls
5504 2339 Pls
5523 2363 Pls
5542 2387 Pls
5562 2411 Pls
5581 2436 Pls
5601 2460 Pls
5620 2485 Pls
5640 2510 Pls
5659 2535 Pls
5679 2561 Pls
5698 2586 Pls
5717 2612 Pls
5737 2638 Pls
5756 2665 Pls
5776 2691 Pls
5795 2718 Pls
5815 2745 Pls
5834 2772 Pls
5853 2799 Pls
5873 2827 Pls
5892 2855 Pls
5912 2883 Pls
5931 2911 Pls
5951 2939 Pls
5970 2968 Pls
5990 2997 Pls
6009 3026 Pls
6028 3055 Pls
6048 3085 Pls
6067 3114 Pls
6087 3144 Pls
6106 3175 Pls
6126 3205 Pls
6145 3236 Pls
6164 3267 Pls
6184 3298 Pls
6203 3329 Pls
6223 3361 Pls
6242 3393 Pls
6262 3425 Pls
6281 3457 Pls
6301 3489 Pls
6320 3522 Pls
6339 3555 Pls
6359 3589 Pls
6378 3622 Pls
6398 3656 Pls
6417 3690 Pls
6437 3724 Pls
6456 3758 Pls
6475 3793 Pls
6495 3828 Pls
6514 3863 Pls
6534 3899 Pls
6553 3934 Pls
6573 3970 Pls
6592 4006 Pls
6612 4043 Pls
6631 4079 Pls
6650 4116 Pls
6670 4153 Pls
6689 4191 Pls
6709 4229 Pls
6728 4267 Pls
6748 4305 Pls
6767 4343 Pls
6159 4568 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
