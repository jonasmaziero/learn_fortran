%!PS-Adobe-2.0
%%Title: integral.eps
%%Creator: gnuplot 5.0 patchlevel 6
%%CreationDate: Fri Nov  8 19:24:34 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (integral.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 6)
  /Author (jonasmaziero)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov  8 19:24:34 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
936 480 M
63 0 V
5768 0 R
-63 0 V
stroke
792 480 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 1090 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1090 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 1700 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1700 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 2310 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2310 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 2921 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2921 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 3531 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3531 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 4141 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4141 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 4751 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 350)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
936 480 M
0 63 V
0 4208 R
0 -63 V
stroke
936 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1769 480 M
0 63 V
0 4208 R
0 -63 V
stroke
1769 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2602 480 M
0 63 V
0 4208 R
0 -63 V
stroke
2602 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3435 480 M
0 63 V
0 4208 R
0 -63 V
stroke
3435 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4268 480 M
0 63 V
0 4208 R
0 -63 V
stroke
4268 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5101 480 M
0 63 V
0 4208 R
0 -63 V
stroke
5101 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5934 480 M
0 63 V
0 4208 R
0 -63 V
stroke
5934 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6767 480 M
0 63 V
0 4208 R
0 -63 V
stroke
6767 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 14)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C /Helvetica findfont 240 scalefont setfont
LCb setrgbcolor
5696 4568 M
('integral.dat' u 1:2) Rshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 962 480 Pls
988 480 Pls
1015 480 Pls
1041 480 Pls
1067 480 Pls
1093 480 Pls
1119 480 Pls
1145 480 Pls
1172 480 Pls
1198 481 Pls
1224 481 Pls
1250 481 Pls
1276 481 Pls
1302 481 Pls
1329 482 Pls
1355 482 Pls
1381 482 Pls
1407 483 Pls
1433 483 Pls
1459 484 Pls
1486 485 Pls
1512 485 Pls
1538 486 Pls
1564 487 Pls
1590 488 Pls
1616 489 Pls
1643 490 Pls
1669 491 Pls
1695 492 Pls
1721 494 Pls
1747 495 Pls
1773 497 Pls
1800 498 Pls
1826 500 Pls
1852 502 Pls
1878 504 Pls
1904 506 Pls
1930 508 Pls
1957 510 Pls
1983 512 Pls
2009 515 Pls
2035 517 Pls
2061 520 Pls
2087 523 Pls
2114 526 Pls
2140 529 Pls
2166 532 Pls
2192 536 Pls
2218 539 Pls
2244 543 Pls
2271 547 Pls
2297 551 Pls
2323 555 Pls
2349 559 Pls
2375 564 Pls
2401 569 Pls
2428 573 Pls
2454 578 Pls
2480 584 Pls
2506 589 Pls
2532 595 Pls
2559 600 Pls
2585 606 Pls
2611 612 Pls
2637 619 Pls
2663 625 Pls
2689 632 Pls
2716 639 Pls
2742 646 Pls
2768 653 Pls
2794 661 Pls
2820 668 Pls
2846 676 Pls
2873 684 Pls
2899 693 Pls
2925 701 Pls
2951 710 Pls
2977 719 Pls
3003 729 Pls
3030 738 Pls
3056 748 Pls
3082 758 Pls
3108 768 Pls
3134 779 Pls
3160 790 Pls
3187 801 Pls
3213 812 Pls
3239 824 Pls
3265 836 Pls
3291 848 Pls
3317 860 Pls
3344 873 Pls
3370 886 Pls
3396 899 Pls
3422 913 Pls
3448 926 Pls
3474 940 Pls
3501 955 Pls
3527 970 Pls
3553 984 Pls
3579 1000 Pls
3605 1015 Pls
3631 1031 Pls
3658 1047 Pls
3684 1064 Pls
3710 1081 Pls
3736 1098 Pls
3762 1116 Pls
3788 1133 Pls
3815 1151 Pls
3841 1170 Pls
3867 1189 Pls
3893 1208 Pls
3919 1227 Pls
3945 1247 Pls
3972 1267 Pls
3998 1288 Pls
4024 1309 Pls
4050 1330 Pls
4076 1352 Pls
4103 1374 Pls
4129 1396 Pls
4155 1419 Pls
4181 1442 Pls
4207 1465 Pls
4233 1489 Pls
4260 1513 Pls
4286 1538 Pls
4312 1563 Pls
4338 1588 Pls
4364 1614 Pls
4390 1640 Pls
4417 1667 Pls
4443 1694 Pls
4469 1721 Pls
4495 1749 Pls
4521 1777 Pls
4547 1806 Pls
4574 1835 Pls
4600 1864 Pls
4626 1894 Pls
4652 1924 Pls
4678 1955 Pls
4704 1986 Pls
4731 2018 Pls
4757 2050 Pls
4783 2083 Pls
4809 2115 Pls
4835 2149 Pls
4861 2183 Pls
4888 2217 Pls
4914 2252 Pls
4940 2287 Pls
4966 2323 Pls
4992 2359 Pls
5018 2395 Pls
5045 2432 Pls
5071 2470 Pls
5097 2508 Pls
5123 2546 Pls
5149 2585 Pls
5175 2625 Pls
5202 2665 Pls
5228 2705 Pls
5254 2746 Pls
5280 2788 Pls
5306 2830 Pls
5332 2872 Pls
5359 2915 Pls
5385 2959 Pls
5411 3003 Pls
5437 3047 Pls
5463 3092 Pls
5489 3138 Pls
5516 3184 Pls
5542 3230 Pls
5568 3277 Pls
5594 3325 Pls
5620 3373 Pls
5647 3422 Pls
5673 3471 Pls
5699 3521 Pls
5725 3572 Pls
5751 3623 Pls
5777 3674 Pls
5804 3726 Pls
5830 3779 Pls
5856 3832 Pls
5882 3886 Pls
5908 3940 Pls
5934 3995 Pls
5961 4051 Pls
5987 4107 Pls
6013 4163 Pls
6039 4221 Pls
6065 4279 Pls
6091 4337 Pls
6118 4396 Pls
6144 4456 Pls
6170 4516 Pls
6196 4577 Pls
6159 4568 Pls
% End plot #1
% Begin plot #2
1.000 UL
LTb
0.00 0.62 0.45 C /Helvetica findfont 240 scalefont setfont
LCb setrgbcolor
5696 4328 M
('' u 1:3) Rshow
1.000 UL
LTb
0.00 0.62 0.45 C 5840 4328 M
639 0 V
962 480 M
26 0 V
27 0 V
26 0 V
26 0 V
26 0 V
26 0 V
26 0 V
27 0 V
26 1 V
26 0 V
26 0 V
26 0 V
26 0 V
27 1 V
26 0 V
26 0 V
26 1 V
26 0 V
26 1 V
27 1 V
26 0 V
26 1 V
26 1 V
26 1 V
26 1 V
27 1 V
26 1 V
26 1 V
26 2 V
26 1 V
26 2 V
27 1 V
26 2 V
26 2 V
26 2 V
26 2 V
26 2 V
27 2 V
26 2 V
26 3 V
26 2 V
26 3 V
26 3 V
27 3 V
26 3 V
26 3 V
26 4 V
26 3 V
26 4 V
27 4 V
26 4 V
26 4 V
26 4 V
26 5 V
26 5 V
27 4 V
26 5 V
26 6 V
26 5 V
26 6 V
27 5 V
26 6 V
26 6 V
26 7 V
26 6 V
26 7 V
27 7 V
26 7 V
26 7 V
26 8 V
26 7 V
26 8 V
27 8 V
26 9 V
26 8 V
26 9 V
26 9 V
26 10 V
27 9 V
26 10 V
26 10 V
26 10 V
26 11 V
26 11 V
27 11 V
26 11 V
26 12 V
26 12 V
26 12 V
26 12 V
27 13 V
26 13 V
26 13 V
26 14 V
26 13 V
26 14 V
27 15 V
26 15 V
26 14 V
26 16 V
26 15 V
26 16 V
stroke 3631 1031 M
27 16 V
26 17 V
26 17 V
26 17 V
26 18 V
26 17 V
27 18 V
26 19 V
26 19 V
26 19 V
26 19 V
26 20 V
27 20 V
26 21 V
26 21 V
26 21 V
26 22 V
27 22 V
26 22 V
26 23 V
26 23 V
26 23 V
26 24 V
27 24 V
26 25 V
26 25 V
26 25 V
26 26 V
26 26 V
27 27 V
26 27 V
26 27 V
26 28 V
26 28 V
26 29 V
27 29 V
26 29 V
26 30 V
26 30 V
26 31 V
26 31 V
27 32 V
26 32 V
26 33 V
26 32 V
26 34 V
26 34 V
27 34 V
26 35 V
26 35 V
26 36 V
26 36 V
26 36 V
27 37 V
26 38 V
26 38 V
26 38 V
26 39 V
26 40 V
27 40 V
26 40 V
26 41 V
26 42 V
26 42 V
26 42 V
27 43 V
26 44 V
26 44 V
26 44 V
26 45 V
26 46 V
27 46 V
26 46 V
26 47 V
26 48 V
26 48 V
27 49 V
26 49 V
26 50 V
26 51 V
26 51 V
26 51 V
27 52 V
26 53 V
26 53 V
26 54 V
26 54 V
26 55 V
27 56 V
26 56 V
26 56 V
26 58 V
26 58 V
26 58 V
27 59 V
26 60 V
26 60 V
26 61 V
% End plot #2
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
