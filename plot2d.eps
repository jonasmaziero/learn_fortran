%!PS-Adobe-2.0
%%Title: plot2d.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Oct  2 17:59:00 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot2d.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (jonasmaziero)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct  2 17:59:00 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
1.000 UL
LTb
936 480 M
63 0 V
5768 0 R
-63 0 V
stroke
792 480 M
[ [(Helvetica) 240.0 0.0 true true 0 (-1)]
] -80.0 MRshow
1.000 UL
LTb
936 1548 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1548 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.5)]
] -80.0 MRshow
1.000 UL
LTb
936 2616 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2616 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
936 3683 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3683 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MRshow
1.000 UL
LTb
936 4751 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
936 480 M
0 63 V
0 4208 R
0 -63 V
stroke
936 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
1769 480 M
0 63 V
0 4208 R
0 -63 V
stroke
1769 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
2602 480 M
0 63 V
0 4208 R
0 -63 V
stroke
2602 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
3435 480 M
0 63 V
0 4208 R
0 -63 V
stroke
3435 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
4268 480 M
0 63 V
0 4208 R
0 -63 V
stroke
4268 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
5101 480 M
0 63 V
0 4208 R
0 -63 V
stroke
5101 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
5934 480 M
0 63 V
0 4208 R
0 -63 V
stroke
5934 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MCshow
1.000 UL
LTb
6767 480 M
0 63 V
0 4208 R
0 -63 V
stroke
6767 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 14)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 240 scalefont setfont
LCb setrgbcolor
5696 4568 M
('sen.dat') Rshow
LT0
936 2616 Pls
949 2750 Pls
962 2883 Pls
975 3016 Pls
988 3147 Pls
1001 3275 Pls
1015 3402 Pls
1028 3525 Pls
1041 3644 Pls
1054 3760 Pls
1067 3871 Pls
1080 3977 Pls
1093 4077 Pls
1106 4172 Pls
1119 4261 Pls
1132 4343 Pls
1145 4419 Pls
1158 4487 Pls
1172 4548 Pls
1185 4601 Pls
1198 4646 Pls
1211 4684 Pls
1224 4713 Pls
1237 4734 Pls
1250 4747 Pls
1263 4751 Pls
1276 4747 Pls
1289 4734 Pls
1302 4713 Pls
1315 4684 Pls
1329 4646 Pls
1342 4601 Pls
1355 4548 Pls
1368 4487 Pls
1381 4419 Pls
1394 4343 Pls
1407 4261 Pls
1420 4172 Pls
1433 4077 Pls
1446 3977 Pls
1459 3871 Pls
1472 3760 Pls
1486 3644 Pls
1499 3525 Pls
1512 3402 Pls
1525 3275 Pls
1538 3147 Pls
1551 3016 Pls
1564 2883 Pls
1577 2750 Pls
1590 2615 Pls
1603 2481 Pls
1616 2348 Pls
1629 2215 Pls
1643 2084 Pls
1656 1956 Pls
1669 1829 Pls
1682 1706 Pls
1695 1587 Pls
1708 1471 Pls
1721 1360 Pls
1734 1254 Pls
1747 1154 Pls
1760 1059 Pls
1773 970 Pls
1787 888 Pls
1800 812 Pls
1813 744 Pls
1826 683 Pls
1839 630 Pls
1852 585 Pls
1865 547 Pls
1878 518 Pls
1891 497 Pls
1904 484 Pls
1917 480 Pls
1930 484 Pls
1944 497 Pls
1957 518 Pls
1970 547 Pls
1983 585 Pls
1996 630 Pls
2009 683 Pls
2022 744 Pls
2035 812 Pls
2048 888 Pls
2061 970 Pls
2074 1059 Pls
2087 1154 Pls
2101 1254 Pls
2114 1360 Pls
2127 1471 Pls
2140 1587 Pls
2153 1706 Pls
2166 1829 Pls
2179 1956 Pls
2192 2084 Pls
2205 2215 Pls
2218 2348 Pls
2231 2481 Pls
2244 2616 Pls
2258 2750 Pls
2271 2883 Pls
2284 3016 Pls
2297 3147 Pls
2310 3275 Pls
2323 3402 Pls
2336 3525 Pls
2349 3644 Pls
2362 3760 Pls
2375 3871 Pls
2388 3977 Pls
2401 4077 Pls
2415 4172 Pls
2428 4261 Pls
2441 4343 Pls
2454 4419 Pls
2467 4487 Pls
2480 4548 Pls
2493 4601 Pls
2506 4646 Pls
2519 4684 Pls
2532 4713 Pls
2545 4734 Pls
2559 4747 Pls
2572 4751 Pls
2585 4747 Pls
2598 4734 Pls
2611 4713 Pls
2624 4684 Pls
2637 4646 Pls
2650 4601 Pls
2663 4548 Pls
2676 4487 Pls
2689 4419 Pls
2702 4343 Pls
2716 4261 Pls
2729 4172 Pls
2742 4077 Pls
2755 3977 Pls
2768 3871 Pls
2781 3760 Pls
2794 3644 Pls
2807 3525 Pls
2820 3402 Pls
2833 3275 Pls
2846 3147 Pls
2859 3016 Pls
2873 2883 Pls
2886 2750 Pls
2899 2615 Pls
2912 2481 Pls
2925 2348 Pls
2938 2215 Pls
2951 2084 Pls
2964 1956 Pls
2977 1829 Pls
2990 1706 Pls
3003 1587 Pls
3016 1471 Pls
3030 1360 Pls
3043 1254 Pls
3056 1154 Pls
3069 1059 Pls
3082 970 Pls
3095 888 Pls
3108 812 Pls
3121 744 Pls
3134 683 Pls
3147 630 Pls
3160 585 Pls
3173 547 Pls
3187 518 Pls
3200 497 Pls
3213 484 Pls
3226 480 Pls
3239 484 Pls
3252 497 Pls
3265 518 Pls
3278 547 Pls
3291 585 Pls
3304 630 Pls
3317 683 Pls
3331 744 Pls
3344 812 Pls
3357 888 Pls
3370 970 Pls
3383 1059 Pls
3396 1154 Pls
3409 1254 Pls
3422 1360 Pls
3435 1471 Pls
3448 1587 Pls
3461 1706 Pls
3474 1829 Pls
3488 1956 Pls
3501 2084 Pls
3514 2215 Pls
3527 2348 Pls
3540 2481 Pls
3553 2616 Pls
3566 2750 Pls
3579 2883 Pls
3592 3016 Pls
3605 3147 Pls
3618 3275 Pls
3631 3402 Pls
3645 3525 Pls
3658 3644 Pls
3671 3760 Pls
3684 3871 Pls
3697 3977 Pls
3710 4077 Pls
3723 4172 Pls
3736 4261 Pls
3749 4343 Pls
3762 4419 Pls
3775 4487 Pls
3788 4548 Pls
3802 4601 Pls
3815 4646 Pls
3828 4684 Pls
3841 4713 Pls
3854 4734 Pls
3867 4747 Pls
3880 4751 Pls
3893 4747 Pls
3906 4734 Pls
3919 4713 Pls
3932 4684 Pls
3945 4646 Pls
3959 4601 Pls
3972 4548 Pls
3985 4487 Pls
3998 4419 Pls
4011 4343 Pls
4024 4261 Pls
4037 4172 Pls
4050 4077 Pls
4063 3977 Pls
4076 3871 Pls
4089 3760 Pls
4103 3644 Pls
4116 3525 Pls
4129 3402 Pls
4142 3275 Pls
4155 3147 Pls
4168 3016 Pls
4181 2883 Pls
4194 2750 Pls
4207 2615 Pls
4220 2481 Pls
4233 2348 Pls
4246 2215 Pls
4260 2084 Pls
4273 1956 Pls
4286 1829 Pls
4299 1706 Pls
4312 1587 Pls
4325 1471 Pls
4338 1360 Pls
4351 1254 Pls
4364 1154 Pls
4377 1059 Pls
4390 970 Pls
4403 888 Pls
4417 812 Pls
4430 744 Pls
4443 683 Pls
4456 630 Pls
4469 585 Pls
4482 547 Pls
4495 518 Pls
4508 497 Pls
4521 484 Pls
4534 480 Pls
4547 484 Pls
4560 497 Pls
4574 518 Pls
4587 547 Pls
4600 585 Pls
4613 630 Pls
4626 683 Pls
4639 744 Pls
4652 812 Pls
4665 888 Pls
4678 970 Pls
4691 1059 Pls
4704 1154 Pls
4717 1254 Pls
4731 1360 Pls
4744 1471 Pls
4757 1587 Pls
4770 1706 Pls
4783 1829 Pls
4796 1956 Pls
4809 2084 Pls
4822 2215 Pls
4835 2348 Pls
4848 2481 Pls
4861 2616 Pls
4875 2750 Pls
4888 2883 Pls
4901 3016 Pls
4914 3147 Pls
4927 3275 Pls
4940 3402 Pls
4953 3525 Pls
4966 3644 Pls
4979 3760 Pls
4992 3871 Pls
5005 3977 Pls
5018 4077 Pls
5032 4172 Pls
5045 4261 Pls
5058 4343 Pls
5071 4419 Pls
5084 4487 Pls
5097 4548 Pls
5110 4601 Pls
5123 4646 Pls
5136 4684 Pls
5149 4713 Pls
5162 4734 Pls
5175 4747 Pls
5189 4751 Pls
5202 4747 Pls
5215 4734 Pls
5228 4713 Pls
5241 4684 Pls
5254 4646 Pls
5267 4601 Pls
5280 4548 Pls
5293 4487 Pls
5306 4419 Pls
5319 4343 Pls
5332 4261 Pls
5346 4172 Pls
5359 4077 Pls
5372 3977 Pls
5385 3871 Pls
5398 3760 Pls
5411 3644 Pls
5424 3525 Pls
5437 3402 Pls
5450 3275 Pls
5463 3147 Pls
5476 3016 Pls
5489 2883 Pls
5503 2750 Pls
5516 2615 Pls
5529 2481 Pls
5542 2348 Pls
5555 2215 Pls
5568 2084 Pls
5581 1956 Pls
5594 1829 Pls
5607 1706 Pls
5620 1587 Pls
5633 1471 Pls
5647 1360 Pls
5660 1254 Pls
5673 1154 Pls
5686 1059 Pls
5699 970 Pls
5712 888 Pls
5725 812 Pls
5738 744 Pls
5751 683 Pls
5764 630 Pls
5777 585 Pls
5790 547 Pls
5804 518 Pls
5817 497 Pls
5830 484 Pls
5843 480 Pls
5856 484 Pls
5869 497 Pls
5882 518 Pls
5895 547 Pls
5908 585 Pls
5921 630 Pls
5934 683 Pls
5947 744 Pls
5961 812 Pls
5974 888 Pls
5987 970 Pls
6000 1059 Pls
6013 1154 Pls
6026 1254 Pls
6039 1360 Pls
6052 1471 Pls
6065 1587 Pls
6078 1706 Pls
6091 1829 Pls
6104 1956 Pls
6118 2084 Pls
6131 2215 Pls
6144 2348 Pls
6157 2481 Pls
6170 2616 Pls
6159 4568 Pls
% End plot #1
1.000 UL
LTb
936 4751 N
936 480 L
5831 0 V
0 4271 V
-5831 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
